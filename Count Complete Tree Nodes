class Solution {
    public int countNodes(TreeNode root) {
        int ans = 0;
        TreeNode node = root;
        
        while(node != null) {
            // Get the leftDepth of left subtree and right subtree to check which one is unfull tree
            int left = leftDepth(node.left);
            int right = leftDepth(node.right);
            
            if(left == right) {
                // Left subtree is a full tree, and right subtree could be a non-full tree
                ans += (1 << left);
                node = node.right;
                
            } else {
                // Right subtree is a full tree, and left subtree could be a non-full tree
                ans += (1 << right);
                node = node.left;
            }
        }
        
        return ans;
    }
    
    private int leftDepth(TreeNode root) {
        int ans = 0;
        
        while(root != null) {
            ans++;
            root = root.left;
        }
        
        return ans;
    }
}
