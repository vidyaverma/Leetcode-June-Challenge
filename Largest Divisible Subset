class Solution {
public:
    vector<int> largestDivisibleSubset(vector<int>& nums) 
    {
        vector<int>v2;
        int l,count=0,max=0,l1;
        int r=nums.size()-1;
        for(int i=0;i<r;i++)
        {
            if(nums[i]%nums[i+1]==0 || nums[i+1]%nums[i]==0)
            {
                l=i;
                while((nums[i]%nums[i+1]==0 || nums[i+1]%nums[i]==0 )&& i<r)
                {
                    count++;
                    i++;
                }
            }
            if(max<count)
            {
                l1=l;
                max=count;
            }
            cout<<max <<l1;
            count=0;
        }
       for(int j=l1;j<=l1+max;j++)
           v2.push_back(nums[j]);
        return v2;
   }
};
